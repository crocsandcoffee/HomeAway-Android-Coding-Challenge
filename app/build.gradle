plugins {
    /**
     * The first line in the build configuration applies the Android plugin for
     * Gradle to this build and makes the android block available to specify
     * Android-specific build options.
     */
    id 'com.android.application'

    id 'kotlin-android'
    id 'kotlin-kapt'
}

/**
 * The android block is where you configure all your Android-specific
 * build options.
 */
android {

    /**
     * compileSdkVersion specifies the Android API level Gradle should use to
     * compile your app. This means your app can use the API features included in
     * this API level and lower.
     */
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.crocsandcoffee.seattleplacesearch"

        // Defines the minimum API level required to run the app.
        minSdkVersion min_sdk_version

        // Specifies the API level used to test the app.
        targetSdkVersion target_sdk_version

        // Defines the version number of your app
        versionCode 1

        // Defines a user-friendly version name for your app.
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /**
     * The buildTypes block is where you can configure multiple build types.
     * By default, the build system defines two build types: debug and release. The
     * debug build type is not explicitly shown in the default build configuration,
     * but it includes debugging tools and is signed with the debug key. The release
     * build type applies Proguard settings and is not signed by default.
     */
    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        // https://developer.android.com/topic/libraries/view-binding
        viewBinding true
    }
}

dependencies {

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Image loading libraries
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Dagger dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Moshi JSON library
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    // Type-safe HTTP client
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Google libraries
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerView_version"
    implementation "androidx.preference:preference-ktx:$preferences_version"
    implementation "androidx.multidex:multidex:$multi_dex_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$arch_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arch_lifecycle_version"

    // Misc 3rd party libs
    implementation "org.apache.commons:commons-collections$apache_commons"

    // Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"
}